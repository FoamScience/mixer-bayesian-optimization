/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2312                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     rhoPimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         1;

deltaT          1e-3;

writeControl    adjustable;

writeInterval   0.02;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  yes;

maxCo           1;

functions
{
    mixingQuality
    {
        // Mandatory entries (unmodifiable)
        type            volFieldValue;
        libs            (fieldFunctionObjects);

        // Mandatory entries (runtime modifiable)
        fields          (alphat);
        operation       CoV;
        regionType      all;
        writeFields     true;
        writeControl    writeTime;
    }

    powerConsumption
    {
        type            propellerInfo;
        libs            (forces);
        writeControl    writeTime;
        patches         (movingWalls);
        URef            1; // Function1 type; 'constant' form shown here
        rho             rhoInf; // incompressible
        rhoInf          1;

        // Optionally write propeller performance data
        writePropellerPerformance yes;

        // Propeller data:
        // Radius
        radius          0.025;
        rotationMode    specified; // specified | MRF
        // rotationMode = specified:
        origin          (0 0 0);
        n               25; // revolutions per second = rad/s / 2pi
        axis            (0 0 1);
        // Optionally write wake text files
        // Note: controlled by writeControl
        writeWakeFields no;
    }

    erosion
    {
        type        wallShearStress;
        libs        (fieldFunctionObjects);
        patches     (movingWalls); // (wall1 "(wall2|wall3)");
        writeFields     true;
        writeControl    writeTime;
    }
}

// ************************************************************************* //
